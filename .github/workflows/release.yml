name: Release

on:
  release:
    types:
      - created

permissions:  # added using https://github.com/step-security/secure-repo
  contents: read

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Setup Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: 3.8
      - name: Install pip
        run: |
          python -m pip install --upgrade pip
          pip install ansible
      - name: Create release artifacts
        run: |
          ansible-galaxy collection build
          ansible-galaxy collection publish *.tar.gz --api-key ${{ secrets.GALAXY_API_KEY }}
      - name: Release artifacts to GitHub
        run: |
          gh release upload $TAG ./crowdstrike-falcon*.tar.gz
        env:
          TAG: ${{ github.event.release.tag_name }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload to Ansible Automation Hub
        run: |
          cat << EOF > ansible.cfg
          [galaxy]
          server_list = automation_hub

          [galaxy_server.automation_hub]
          url=https://console.redhat.com/api/automation-hub/content/inbound-crowdstrike/
          auth_url=https://sso.redhat.com/auth/realms/redhat-external/protocol/openid-connect/token
          token=$AAP_KEY
          EOF
          ansible-galaxy collection publish ./crowdstrike-falcon*.tar.gz
        env:
          AAP_KEY: ${{ secrets.AAP_KEY }}
