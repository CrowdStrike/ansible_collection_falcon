name: "win_falcon_uninstall"
on:
  schedule:
    - cron: '0 8 * * *'
  push:
    paths:
      - 'roles/falcon_uninstall/**'
      - 'molecule/win_falcon_uninstall/**'
      - '.github/workflows/win_falcon_uninstall.yml'
  pull_request_target:
    types: [ labeled ]
    paths:
      - 'roles/falcon_uninstall/**'
      - 'molecule/win_falcon_uninstall/**'
      - '.github/workflows/win_falcon_uninstall.yml'
permissions:  # added using https://github.com/step-security/secure-repo
  contents: read

jobs:
  molecule:
    if: |
      github.event_name == 'push' ||
      github.event_name == 'schedule' ||
      (github.event_name == 'pull_request_target' &&
      github.event.label.name == 'ok-to-test')
    runs-on: ubuntu-latest
    env:
      PY_COLORS: 1
      ANSIBLE_FORCE_COLOR: 1
      FALCON_CLIENT_ID: ${{ secrets.FALCON_CLIENT_ID }}
      FALCON_CLIENT_SECRET: ${{ secrets.FALCON_CLIENT_SECRET }}
      FALCON_CID: ${{ secrets.FALCON_CID }}
      FALCON_PROV_TOKEN: ${{ secrets.FALCON_PROV_TOKEN }}
      AWS_REGION: "us-west-2"
      MOLECULE_VPC_SUBNET_ID: ${{ secrets.MOLECULE_VPC_SUBNET_ID }}
    permissions:
      contents: read
      id-token: write
    strategy:
      fail-fast: false
      matrix:
        molecule:
          - distro: WindowsServer2022
            image_owner: 801119661308
            image_arch: x86_64
            image_name: Windows_Server-2022-English-Full-Base-*
            instance_type: t3a.medium
        collection_role:
            - win_falcon_uninstall
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - name: Check out code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        if: github.event_name != 'pull_request_target'

      - name: Check out code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          ref: ${{github.event.pull_request.head.sha}}
        if: github.event_name == 'pull_request_target'

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@00943011d9042930efac3dcd3a170e4273319bc8 # v5.1.0
        with:
          role-to-assume: ${{ secrets.AWS_OIDC_ROLE }}
          role-session-name: github-actions-molecule-ansible
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: '.devcontainer/requirements.txt'

      - name: Install dependencies
        run: |
          sudo apt install apt-transport-https ca-certificates curl software-properties-common libssl-dev
          python -m pip install --upgrade pip
          pip install -r .devcontainer/requirements.txt pywinrm

      - name: Build/Install the collection
        uses: nick-fields/retry@ce71cc2ab81d554ebbe88c79ab5975992d79ba08 # v3.0.2
        with:
          timeout_minutes: 2
          max_attempts: 3
          retry_on: error
          command: |
            collection_file=$( basename $(ansible-galaxy collection build -f | awk -F" " '{print $NF}'))
            ansible-galaxy collection install $collection_file

      - name: Run role tests
        id: molecule-role-test
        uses: nick-fields/retry@ce71cc2ab81d554ebbe88c79ab5975992d79ba08 # v3.0.2
        env:
          MOLECULE_INSTANCE_NAME: ${{ matrix.molecule.distro }}-${{ matrix.collection_role }}
          MOLECULE_IMAGE_OWNER: ${{ matrix.molecule.image_owner }}
          MOLECULE_IMAGE_ARCH: ${{ matrix.molecule.image_arch }}
          MOLECULE_IMAGE_NAME: '${{ matrix.molecule.image_name }}'
          MOLECULE_INSTANCE_TYPE: ${{ matrix.molecule.instance_type }}
          MOLECULE_REGION: ${{ env.AWS_REGION}}
        with:
          timeout_minutes: 30
          max_attempts: 3
          retry_on: error
          command: >-
            molecule --version &&
            ansible --version &&
            molecule test --destroy never -s ${{ matrix.collection_role }} -- -v
        continue-on-error: true

      - name: Ensure instances are destroyed
        uses: nick-fields/retry@ce71cc2ab81d554ebbe88c79ab5975992d79ba08 # v3.0.2
        env:
          MOLECULE_INSTANCE_NAME: ${{ matrix.molecule.distro }}-${{ matrix.collection_role }}
          MOLECULE_IMAGE_OWNER: ${{ matrix.molecule.image_owner }}
          MOLECULE_IMAGE_ARCH: ${{ matrix.molecule.image_arch }}
          MOLECULE_IMAGE_NAME: '${{ matrix.molecule.image_name }}'
          MOLECULE_INSTANCE_TYPE: ${{ matrix.molecule.instance_type }}
          MOLECULE_REGION: ${{ env.AWS_REGION}}
        with:
          timeout_minutes: 10
          max_attempts: 3
          retry_on: error
          command: >-
            molecule --version &&
            ansible --version &&
            molecule destroy -s ${{ matrix.collection_role }}

      - name: Assert molecule tests passed
        uses: nick-fields/assert-action@aa0067e01f0f6545c31755d6ca128c5a3a14f6bf # v2.0.0
        with:
          expected: success
          actual: ${{ steps.molecule-role-test.outcome }}
