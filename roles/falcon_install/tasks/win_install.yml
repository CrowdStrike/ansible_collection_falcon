---
- name: CrowdStrike Falcon | Handle maintenance token for Windows install
  when:
    - falcon_maintenance_token is defined
    - falcon_maintenance_token is not none
    - falcon_maintenance_token | length > 0
  block:
    - name: CrowdStrike Falcon | Check if maintenance token is already in install args
      ansible.builtin.set_fact:
        maintenance_token_present: "{{ 'MAINTENANCE_TOKEN=' in falcon_windows_install_args }}"

    - name: CrowdStrike Falcon | Append maintenance token to install args if not present
      ansible.builtin.set_fact:
        falcon_windows_install_args_with_token: "{{ falcon_windows_install_args }} MAINTENANCE_TOKEN={{ falcon_maintenance_token }}"
      when:
        - not maintenance_token_present
        - falcon_sensor_installed | default(false)

- name: CrowdStrike Falcon | Set final Windows install arguments
  ansible.builtin.set_fact:
    falcon_windows_install_args: "{{ falcon_windows_install_args_with_token | default(falcon_windows_install_args) }}"

- name: CrowdStrike Falcon | Install Falcon Sensor .exe Package (Windows)
  ansible.windows.win_package:
    path: "{{ falcon_sensor_pkg }}"
    state: present
    creates_service: csfalconservice
    arguments: "/install /quiet CID={{ falcon_cid }} {{ falcon_windows_install_args }}"
  when:
    - ansible_facts['os_family'] == "Windows"
  register: falcon_installed
  retries: "{{ falcon_windows_install_retries }}"
  delay: "{{ falcon_windows_install_delay }}"
  until: falcon_installed is success

- name: CrowdStrike Falcon | Remove tmp install directory (Windows)
  ansible.windows.win_file:
    path: "{{ falcon_windows_tmp_dir_stat.stat.path }}"
    state: absent
  changed_when: false
