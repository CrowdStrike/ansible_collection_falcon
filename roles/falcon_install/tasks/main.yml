---
# tasks file for falcon_install
- name: Preinstall block
  block:
    - ansible.builtin.include_tasks: preinstall.yml
      # noqa name[missing]

- name: URL block
  when:
    - falcon_install_method == "url"
    - ansible_facts['os_family'] != "Windows"
  block:
    - ansible.builtin.include_tasks: url.yml
      # noqa name[missing]

- name: API block
  when:
    - falcon_install_method == "api"
    - ansible_facts['os_family'] != "Windows"
  block:
    - ansible.builtin.include_tasks: auth.yml
      # noqa name[missing]
    - ansible.builtin.include_tasks: api.yml
      # noqa name[missing]

- name: File block
  when:
    - falcon_install_method == "file"
  block:
    - ansible.builtin.include_tasks: file.yml
      # noqa name[missing]

- name: Windows URL block
  when:
    - falcon_install_method == "url"
    - ansible_facts['os_family'] == "Windows"
  block:
    - ansible.builtin.include_tasks: win_url.yml
      # noqa name[missing]

- name: Windows API block
  when:
    - falcon_install_method == "api"
    - ansible_facts['os_family'] == "Windows"
  block:
    - ansible.builtin.include_tasks: win_auth.yml
      # noqa name[missing]
    - ansible.builtin.include_tasks: win_api.yml
      # noqa name[missing]

- name: Non-Windows Install block
  when:
    - ansible_facts['os_family'] != "Windows"
  become: true
  become_user: root
  block:
    - ansible.builtin.include_tasks: install.yml
      # noqa name[missing]

- name: Windows Install block
  when:
    - ansible_facts['os_family'] == "Windows"
  become: true
  become_method: "{{ falcon_windows_become_method }}"
  become_user: "{{ falcon_windows_become_user }}"
  block:
    - ansible.builtin.include_tasks: win_install.yml
      # noqa name[missing]
