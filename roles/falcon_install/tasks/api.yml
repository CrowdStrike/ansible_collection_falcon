---
- name: Sensor Update Policy Block
  when:
    - falcon_sensor_update_policy_name
  block:
    - name: "CrowdStrike Falcon | Build Sensor Update Policy API Query"
      ansible.builtin.set_fact:
        falcon_sensor_update_policy_filter: "platform_name:'{{ falcon_sensor_update_policy_platform }}'+name.raw:'{{ falcon_sensor_update_policy_name }}'"

    - name: CrowdStrike Falcon | Search for Sensor Update Policy
      crowdstrike.falcon.sensor_update_policy_info:
        auth: "{{ falcon.auth }}"
        filter: "{{ falcon_sensor_update_policy_filter }}"
      register: falcon_sensor_update_policy_info
      delegate_to: localhost

    - name: "CrowdStrike Falcon | Validate Sensor Update Policy request"
      ansible.builtin.fail:
        msg: "No Falcon Sensor Update Policy with name: {{ falcon_sensor_update_policy_name }} was found!"
      when: falcon_sensor_update_policy_info.policies is not defined

    - name: "CrowdStrike Falcon | Validate Sensor Update Policy request for aarch64 architectures"
      ansible.builtin.fail:
        msg: "No Falcon Sensor Update Policy with name: {{ falcon_sensor_update_policy_name }} and enabled for aarch64 was found!"
      when:
        - falcon_sensor_update_policy_info.policies[0].settings.variants[0] is not defined
        - ansible_facts['machine'] == "aarch64"

    - name: "CrowdStrike Falcon | Get the Falcon Sensor version from Update Policy"
      ansible.builtin.set_fact:
        falcon_sensor_update_policy_package_version: "{{ falcon_sensor_update_policy_info.policies[0].settings.sensor_version }}"
      when: ansible_facts['machine'] != "aarch64"

    - name: "CrowdStrike Falcon | Get the Falcon Sensor version from Update Policy for aarch64 architecture"
      ansible.builtin.set_fact:
        falcon_sensor_update_policy_package_version: "{{ falcon_sensor_update_policy_info.policies[0].settings.variants[0].sensor_version }}"
      when: ansible_facts['machine'] == "aarch64"

    - name: CrowdStrike Falcon | Override falcon_sensor_version with version from Sensor Update Policy
      ansible.builtin.set_fact:
        falcon_sensor_version: "+version:'{{ falcon_sensor_update_policy_package_version }}'"

- name: "CrowdStrike Falcon | Build API Sensor Query"
  ansible.builtin.set_fact:
    falcon_os_query:
      "os:'{{ falcon_target_os }}'+os_version:'{{ falcon_os_version }}'\
      {{ falcon_os_arch | default('') }}{{ falcon_sensor_version | default('') }}"

- name: CrowdStrike Falcon | Get list of filtered Falcon sensors
  crowdstrike.falcon.sensor_download_info:
    auth: "{{ falcon.auth }}"
    filter: "{{ falcon_os_query }}"
    sort: "version|desc"
  register: falcon_api_installer_list
  delegate_to: localhost

- name: CrowdStrike Falcon | Validate Sensor request
  ansible.builtin.fail:
    msg: "No Falcon Sensor was found! If passing in falcon_sensor_version, ensure it is correct!"
  when: falcon_api_installer_list.installers[0] is not defined

- name: CrowdStrike Falcon | Ensure download path exists (local)
  ansible.builtin.file:
    path: "{{ falcon_api_sensor_download_path }}"
    state: directory
    mode: "0755"
  changed_when: false
  delegate_to: localhost
  run_once: true

- name: CrowdStrike Falcon | Download Falcon Sensor Installation Package (local)
  crowdstrike.falcon.sensor_download:
    auth: "{{ falcon.auth }}"
    hash: "{{ falcon_api_installer_list.installers[falcon_sensor_version_decrement | int].sha256 }}"
    dest: "{{ falcon_api_sensor_download_path | default(omit, true) }}"
    name: "{{ falcon_api_sensor_download_filename | default(omit, true) }}"
    mode: "{{ falcon_api_sensor_download_mode | default(omit, true) }}"
    owner: "{{ falcon_api_sensor_download_owner | default(omit, true) }}"
    group: "{{ falcon_api_sensor_download_group | default(omit, true) }}"
  changed_when: false
  register: falcon_sensor_download
  delegate_to: localhost

- name: CrowdStrike Falcon | Copy Sensor Installation Package to remote host (non-windows)
  ansible.builtin.copy:
    src: "{{ falcon_sensor_download.path }}"
    dest: "{{ falcon_install_temp_directory.path }}"
    mode: 0640
  changed_when: false
  register: falcon_sensor_copied
  when: ansible_os_family != "Windows"

- name: CrowdStrike Falcon | Copy Sensor Installation Package to remote host (windows)
  ansible.windows.win_copy:
    src: "{{ falcon_sensor_download.path }}"
    dest: "{{ falcon_windows_tmp_dir_stat.stat.path }}"
  changed_when: false
  register: win_falcon_sensor_copied
  when: ansible_os_family == "Windows"

- name: CrowdStrike Falcon | Remove Downloaded Sensor Installation directory (local)
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  changed_when: false
  delegate_to: localhost
  loop:
    - "{{ falcon_sensor_download.path }}"
    - "{{ falcon_sensor_download.path + '.lock' }}"
  when: falcon_api_sensor_download_cleanup

- name: CrowdStrike Falcon | Set full file download path (non-windows)
  ansible.builtin.set_fact:
    falcon_sensor_pkg: "{{ falcon_sensor_copied.dest }}"
  when: ansible_os_family != "Windows"

- name: CrowdStrike Falcon | Set full file download path (windows)
  ansible.builtin.set_fact:
    falcon_sensor_pkg: "{{ win_falcon_sensor_copied.dest }}\\{{ win_falcon_sensor_copied.original_basename }}"
  when: ansible_os_family == "Windows"
