---
- name: CrowdStrike Falcon | Set default sensor name
  ansible.builtin.set_fact:
    falcon_sensor_pkg: 'falcon-sensor'
  when:
    - falcon_sensor_pkg is not defined

- name: CrowdStrike Falcon | Transfer CrowdStrike Falcon RPM GPG key files
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "{{ falcon_install_temp_directory.path }}/{{ item }}"
    mode: 0640
  changed_when: no
  loop: "{{ falcon_gpg_keys }}"
  when:
    - falcon_gpg_key_check

- name: CrowdStrike Falcon | Import CrowdStrike Falcon RPM GPG key from files
  ansible.builtin.rpm_key:
    state: present
    key: '{{ falcon_install_temp_directory.path }}/{{ item }}'
  changed_when: no
  loop: "{{ falcon_gpg_keys }}"
  when:
    - falcon_gpg_key_check
    - ansible_facts['pkg_mgr'] in rpm_packagers

- name: CrowdStrike Falcon | Import CrowdStrike Falcon APT GPG key from file
  ansible.builtin.apt_key:
    file: '{{ falcon_install_temp_directory.path }}/{{ latest_gpg_key }}'
    state: present
  changed_when: no
  when:
    - falcon_gpg_key_check
    - ansible_facts['pkg_mgr'] in dpkg_packagers

- name: CrowdStrike Falcon | Install Falcon Sensor Package (Linux)
  ansible.builtin.package:
    deb: "{{ falcon_sensor_pkg if (ansible_facts['pkg_mgr'] in dpkg_packagers) else omit }}"
    name: "{{ falcon_sensor_pkg if (ansible_facts['pkg_mgr'] in rpm_packagers) else omit }}"
    allow_downgrade: "{{ falcon_allow_downgrade if (ansible_facts['pkg_mgr'] != 'zypper') else omit }}"
    oldpackage: "{{ falcon_allow_downgrade if (ansible_facts['pkg_mgr'] == 'zypper') else omit }}"
    state: present
  when:
    - ansible_facts['pkg_mgr'] in linux_packagers

- name: CrowdStrike Falcon | Install Falcon Sensor .pkg Package (macOS)
  ansible.builtin.command: "/usr/sbin/installer -pkg {{ falcon_sensor_pkg }} -target /"
  args:
    creates: "/Applications/Falcon.app/Contents/Resources/falconctl"
  when:
    - ansible_facts['distribution'] == "MacOSX"

- name: CrowdStrike Falcon | Verify Falcon Package Is Installed
  ansible.builtin.package_facts:
    manager: auto
  when: ansible_facts['distribution'] != "MacOSX"

- name: CrowdStrike Falcon | Remove tmp install directory
  ansible.builtin.file:
    path: "{{ falcon_install_tmp_dir }}"
    state: absent
  changed_when: no

- name: CrowdStrike Falcon | Remove Falcon Sensor Package (local file)
  ansible.builtin.file:
    path: "{{ falcon_localfile_path }}"
    state: absent
  when:
    - falcon_install_method == "file"
    - falcon_localfile_cleanup
  changed_when: no
